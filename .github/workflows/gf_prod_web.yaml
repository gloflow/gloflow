name: web - prod
on:
  push:
    branches: 
      - master
    paths:
      - "web/**"
      - .github/workflows/gf_prod_web.yaml
      - meta/gf_web_meta.py

  # workflow_run:
  #   # trigger this workflow if the Rust workflow completes succesfuly
  #   workflows: ["gf_prod_rust"]
  #   types:
  #     - completed

  # workflow is also triggered via github REST API/manually
  workflow_dispatch:

env:
  ENV: prod
  AWS_REGION: us-east-1
  CONTAINER_IMAGE: glofloworg/gf_solo
  IMAGE_TAG: latest

jobs:

  #--------------------------------------------------------------------
  # DOWNLOAD_PREBUILT_ARTIFACTS - test fetchability or dependency assets

  get-workflow-deps:
    runs-on: ubuntu-latest
    container:
      image: glofloworg/gf_builder_go_ubuntu:latest
      volumes:

        # mount the dir where the gloflow repo is cloned
        - ${{ github.workspace }}:/home/gf
    outputs:
      gf_lang_build_run_id:  ${{ steps.get_run_id.outputs.gf_lang_build_run_id }}
    steps:

      #-------------------------------
      # GIT_CHECKOUT
      - uses: actions/checkout@v3

      #-------------------------------
      - name: get latest workflows run_id's
        id: get_run_id
        env:
          GITHUB_TOKEN: ${{ secrets.GF_OS_WORKFLOWS_PAT }}
        run: |

          # VARS
          GF_LANG_WF_NAME="gf_prod_gf_lang.yaml"

          # GET_RUN_ID
          GF_LANG_RUN_ID=`gh run --repo ${{ github.repository }} list --status success --workflow ${GF_LANG_WF_NAME} --json databaseId --jq .[0].databaseId`

          # SET_OUTPUTS
          echo "::set-output name=gf_lang_build_run_id::$GF_LANG_RUN_ID"

      #-------------------------------

  #--------------------------------------------------------------------
  # BUILD_WEB
  build-web:
    needs: [get-workflow-deps]
    runs-on: ubuntu-latest
    container:
      image: glofloworg/gf_builder_web:latest
      volumes:

        # mount the dir where the gloflow repo is cloned
        - ${{ github.workspace }}:/home/gf

    steps:

      #-------------------------------
      # GIT_CHECKOUT
      - uses: actions/checkout@v3

      #-------------------------------
      # DOWNLOAD_GF_LANG_ARTIFACTS

      # WEB_GO - WASM
      - name: download gf_lang web_go build artifacts
        uses: actions/download-artifact@v4
        with:
          name: gf_lang_web_go_build_artifacts
          github-token: ${{ secrets.GF_OS_WORKFLOWS_PAT }}
          path: /home/gf/web/build/gf_apps/gf_images
          run-id: "${{ needs.get-workflow-deps.outputs.gf_lang_build_run_id }}"

      # WEB
      - name: download gf_lang web build artifacts
        uses: actions/download-artifact@v4
        with:
          name: gf_lang_web_build_artifacts
          github-token: ${{ secrets.GF_OS_WORKFLOWS_PAT }}
          path: /home/gf/web/build/gf_apps/gf_images
          run-id: "${{ needs.get-workflow-deps.outputs.gf_lang_build_run_id }}"
          
      #-------------------------------
      # BUILD_WEB
      - name: build Web code
        # "-u" - run unbuffered to see all stdout/stderr as it happens
        # - python3 -u /home/gf/build/gf_builder/gf_builder.py -run=build_web
        run: |
          python3 -u /home/gf/ops/cli__build.py -run=build_web -build_outof_cont -app=gf_solo

      #-------------------------------
      # UPLOAD_ARTIFACTS
      - name: upload Web build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: web_build_artifacts
          path: |
            /home/gf/web/build
          retention-days: 30

      #-------------------------------
      

  #--------------------------------------------------------------------
  # NOTIFY_COMPLETION - run containers build workflow

  notify_completion:
    needs: build-web
    runs-on: ubuntu-latest
    
    steps:
      - name: trigger container build workflow
        env:
          GITHUB_TOKEN: ${{ secrets.GF_OS_WORKFLOWS_PAT }}
        run: gh workflow run gf_prod_containers.yaml --repo ${{ github.repository }} --ref master

  #--------------------------------------------------------------------