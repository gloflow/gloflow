name: gf_dev
on:
  push:
    branches: [ dev ]

  # workflow is also triggered via github REST API/manually
  workflow_dispatch:

env:
  ENV: dev
  AWS_REGION: us-east-1
  CONTAINER_IMAGE: glofloworg/gf_solo
  IMAGE_TAG: latest

jobs:

  #--------------------------------------------------------------------
  # TEST_GO
  test-go:
    runs-on: ubuntu-latest
    container:
      image: glofloworg/gf_builder_go_ubuntu:latest
      volumes:

        # mount the dir where the gloflow repo is cloned
        - ${{ github.workspace }}:/home/gf
      env:
        GF_LOG_LEVEL: debug
        GF_ALCHEMY_SERVICE_ACC__API_KEY: ${{ secrets.GF_ALCHEMY_SERVICE_ACC__API_KEY }}

        # currently these are used by web3 tests
        GF_TEST_MONGODB_HOST_PORT: mongo
        GF_TEST_SQL_HOST_PORT: postgres

        AUTH0_DOMAIN: ${{ secrets.GF_AUTH0_DOMAIN }}

    services:
      mongo:
        image: mongo
      postgres:
        image: postgres
        env:

          # disable auth on SQL server
          POSTGRES_HOST_AUTH_METHOD: trust
          POSTGRES_DB: gf_tests
          POSTGRES_USER: gf

    steps:

      #-------------------------------
      # GIT_CHECKOUT
      - uses: actions/checkout@v3

      #-------------------------------
      # GF_IMAGES_CORE
      - name: test gf_images_core
        run: |
          cd /home/gf/go/gf_apps/gf_images_lib/gf_images_core
          go test -v -mongodb_host=mongo -sql_host=postgres

      # GF_IMAGES_FLOWS
      - name: test gf_images_flows
        run: |
          cd /home/gf/go/gf_apps/gf_images_lib/gf_images_flows
          go test -v -mongodb_host=mongo -sql_host=postgres

      # GF_IMAGES_SERVICE
      - name: test gf_images_service
        run: |
          cd /home/gf/go/gf_apps/gf_images_lib/gf_images_service
          go test -v -mongodb_host=mongo -sql_host=postgres
      
      # GF_TAGGER
      - name: test gf_tagger
        run: |
          cd /home/gf/go/gf_apps/gf_tagger_lib
          go test -v -mongodb_host=mongo -sql_host=postgres

      # GF_LANG
      - name: test gf_lang
        run: |
          cd /home/gf/gf_lang/go/gf_lang
          go test -v

      # GF_POLICY
      - name: test gf_policy
        run: |
          cd /home/gf/go/gf_identity/gf_policy
          go test -v -mongodb_host=mongo -sql_host=postgres

      # GF_IDENTITY_LIB
      - name: test gf_identity
        run: |
          cd /home/gf/go/gf_identity
          go test -v -mongodb_host=mongo -sql_host=postgres
          
      # GF_WEB3
      - name: test gf_web3
        run: |
          cd /home/gf/go/gf_web3/gf_web3_lib
          go test -v
      
      # GF_HOME
      - name: test gf_home
        run: |
          cd /home/gf/go/gf_apps/gf_home_lib
          go test -v -mongodb_host=mongo -sql_host=postgres

      # GF_ADMIN
      - name: test gf_admin
        run: |
          cd /home/gf/go/gf_apps/gf_admin_lib
          go test -v -mongodb_host=mongo -sql_host=postgres

      # GF_BOOKMARKS
      - name: test gf_bookmarks
        run: |
          cd /home/gf/go/gf_apps/gf_tagger_lib/gf_bookmarks
          go test -v -mongodb_host=mongo -sql_host=postgres
      
      # GF_LANDING_PAGE
      - name: test gf_landing_page
        run: |
          cd /home/gf/go/gf_apps/gf_landing_page_lib
          go test -v -mongodb_host=mongo -sql_host=postgres

      #-------------------------------
  #--------------------------------------------------------------------
  # NOTIFY_COMPLETION
  notify_completion:
    needs: build-and-publish-containers
    runs-on: ubuntu-latest
    steps:

      #-------------------------------
      # GIT_CHECKOUT
      - uses: actions/checkout@v3
      
      #-------------------------------
      # INITIALIZE_PYTHON3
      - name: initialize python3
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: install python3 dependencies for cli__build.py
        run: |
          pip3 install -r requirements.txt

      #-------------------------------
      # NOTIFY_COMPLETION
      - name: notify completion via HTTP
        env:
          GF_NOTIFY_COMPLETION_URL: ${{ secrets.GF_NOTIFY_COMPLETION_URL__GF_SOLO }}
        run: |
          python3 ops/cli__build.py -run=notify_completion -app=gf_solo

      #-------------------------------

  #--------------------------------------------------------------------