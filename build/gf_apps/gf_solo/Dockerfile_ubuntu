FROM ubuntu:22.04

#------------
# GROUP/USER
RUN groupadd -r gf
RUN useradd --create-home --no-log-init -r -g gf gf

#------------




# RUN apt-get install -y gnupg
# 
# # FIX!! - this is a hacky solution for the "apt-get update" issue
# #         "The following signatures couldn't be verified because the public key is not available: NO_PUBKEY" 
# RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 871920D1991BC93C



#------------
RUN apt-get update
RUN apt-get install -y \
    python3 \
    python3-pip \
    wget

#------------
# GF_IMAGES_JOBS__C_DEPENDENCIES
# IMPORTANT!! - to indicate non-interactive, otherwise tzdata dependency
#               will always prompt for user input in block the execution.
ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get install -y \
    libglib2.0 \
    libcairo2-dev

# LIBVIPS - image processing library
#           dependency for the golang image library "bimg"
RUN apt-get install -y libvips-dev

#------------
# CHROMIUM - used by bookmarking logic to take screenshots of bookmarked sites

# RUN snap install chromium
# RUN apt-get install -y chromium-browser

RUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
RUN echo 'deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main' | tee /etc/apt/sources.list.d/google-chrome.list
RUN apt-get update 
RUN apt-get install -y google-chrome-stable

#------------
# FFMPEG - used for video operations, getting frames for videos, etc.
RUN apt-get install -y ffmpeg

#------------

WORKDIR /home/gf
USER gf

#------------
# DIRS
# RUN mkdir /home/gf
RUN mkdir -p /home/gf/logs
RUN mkdir -p /home/gf/config
RUN mkdir -p /home/gf/data
RUN mkdir -p /home/gf/libs
RUN mkdir -p /home/gf/static

# used for fetched images, and intermediate processing results
RUN mkdir -p /home/gf/images
RUN mkdir -p /home/gf/images/thumbnails
RUN mkdir -p /home/gf/videos


# PY_DEPENDENCIES
ADD ./requirements.txt requirements.txt
RUN pip3 install -r requirements.txt

#------------
ADD templates templates
ADD ./static  static

#------------
# LIBS

ADD ./libs libs

# TENSORFLOW LIB
# HACK!! - tensorflow wants to load libtensorflow_framework.so.1 even though libtensorflow_framework.so
#          is present. so just doing a quick solution of making a copy here via Dockerfile. 
#          see to move this into some more appropriate place (lib preparation stage).
RUN cp libs/libtensorflow_framework.so libs/libtensorflow_framework.so.1

# C_LIBS - so that the libs can be loaded by linker/gf_solo
ENV LD_LIBRARY_PATH=libs

#------------
# FILES_FOR_PARTICULAR_SERVICES
ADD ./gf_images    gf_images
ADD ./gf_analytics gf_analytics
ADD ./gf_ml_worker gf_ml_worker

# MAIN
ADD ./gf_solo gf_solo

# CONFIG
ADD ./config/gf_crawl_config.yaml  config/gf_crawl_config.yaml
ADD ./config/gf_images_config.yaml config/gf_images_config.yaml
ADD ./config/gf_solo.yaml          config/gf_solo.yaml

#------------

# IMPORTANT!! - no matter which user ran the container build command, set the ownership of all files in /home/gf
#               to user "gf" so that gf_solo access them.
USER root
RUN chown -R gf .

#------------
USER gf

ENTRYPOINT ["/home/gf/gf_solo"]

# default arguments
CMD ["start", "service"]