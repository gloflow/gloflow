FROM golang

RUN mkdir /home/gf

#-----------------------------
# LIBS
# IMPORTANT!! - do a "apt" update every time packages are installed, to avoid cached
#               "apt" data that is stale and may result in cached IP's that break builds.
# GIT - used by ./ops/utils/gf_build_changes.py to determine which apps changed.
# SED - used by gf_builder to inject Git commit hash into Go code.

# libglib2.0-dev - Rust build dependency
# libcairo2-dev  - Rust build dependency - Cairo 2D drawing lib

RUN apt-get update && \
    apt-get install -y \
    git \
    python3 \
    python3-pip \
    nodejs \
    npm \
    docker.io \
    sed \
    curl \
    libglib2.0-dev \
    libcairo2-dev \
    zip \
    libglib2.0-dev 

RUN pip3 install \
    delegator.py \
    colored \
    beautifulsoup4 \
    requests \
    'fabric<2.0'

RUN npm install -g typescript
RUN npm install -g uglify-js

#-----------------------------
# RUST
# IMPORTANT!! - "-y" - passing it in at the end is for non-interactive installation, preventing
#                      Rust installer from prompting the user for input (since we're in a container).

RUN curl -sf -L https://static.rust-lang.org/rustup.sh | sh -s -- -y
ENV PATH="/root/.cargo/bin:${PATH}"
RUN cargo --version

# RUST_NIGHTLY - needed by PyO3 package
RUN rustup self update
RUN rustup toolchain install nightly
RUN rustup run nightly rustc --version
RUN rustup default nightly


# MUSL - used as a replacement for glibc in order to achieve 100% static linking of output binary.
#        we want libc compiled into the binary in order to deploy to targets
#        dont have a libc compatible standard library (Alpine Linux, etc.).
RUN rustup target add x86_64-unknown-linux-musl

#-----------------------------
# PROTOCOL_BUFFERS_COMPILER - "protoc"

RUN wget https://github.com/protocolbuffers/protobuf/releases/download/v3.11.4/protoc-3.11.4-linux-x86_64.zip
RUN ls -al
RUN unzip protoc-3.11.4-linux-x86_64.zip
RUN rm protoc-3.11.4-linux-x86_64.zip
RUN cp bin/protoc /usr/bin



#-----------------------------
# ENTRYPOINT ["python3", "/home/gf/build/gf_builder/gf_builder.py"]